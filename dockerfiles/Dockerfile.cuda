FROM nvidia/cuda:12.6.0-devel-ubuntu24.04

ARG UID=1001
ARG GID=1001

ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1
    
# Basic Python + runtime libs
RUN apt-get update && apt-get install -y --no-install-recommends \
      python3 python3-venv python3-pip ca-certificates curl libstdc++6 \
      python3-dev cython3 \
      build-essential gfortran pkg-config \
      libopenblas-dev liblapack-dev libfftw3-dev libgomp1 \
      tk tcl fonts-dejavu \
    && rm -rf /var/lib/apt/lists/*

RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

WORKDIR /opt/app
COPY context/requirements.txt ./
COPY context/requirements-gpu.txt ./

# Install your sim + NumPy/SciPy (CPU compute by default).
# If your sim optionally uses Numba/CuPy, you can install conditionals here:
#   pip install numba
#   pip install "cupy-cuda12x"    # optional; only if your project uses CuPy
RUN pip install --upgrade pip \
 && pip install -r requirements.txt

# Install PARAMENT
RUN pip install -r requirements-gpu.txt

# Create non-root user
RUN groupadd -g ${GID} app && useradd -m -u ${UID} -g ${GID} app
USER app

WORKDIR /workspace

# Runs fine on CPU-only hosts; on GPU hosts, use Docker's --gpus flag.
CMD ["python", "-c", "import simos as sos; print('CUDA image OK')"]